----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    14:00:39 11/12/2022 
-- Design Name: 
-- Module Name:    FIFO_MEM - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;



-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity FIFO_MEM is
    Port ( datain : in  STD_LOGIC_VECTOR (7 downto 0);
           en : in  STD_LOGIC;
           clk : in  STD_LOGIC;
           rst : in  STD_LOGIC;
           w : in  STD_LOGIC;
           dataout : out  STD_LOGIC_VECTOR (7 downto 0);
           red : out  STD_LOGIC);
end FIFO_MEM;

architecture Behavioral of FIFO_MEM is

SIGNAL WPTR,RPTR :  STD_LOGIC_VECTOR ( 3 downto 0 );
TYPE FIFO IS ARRAY ( 15 downto 00 ) OF STD_LOGIC_VECTOR ( 07 downto 00 );
SIGNAL mem:fifo;
 BEGIN
   Process (CLK, RST)
begin
IF RST= '1' THEN
           WPTR <= "0000";
           RPTR <= "0000";
           RED <= '0';    -- NO WARNING
 ELSE IF (CLK'EVENT AND CLK ='1') THEN 
         IF (EN = '1') THEN
          IF (W = '1') THEN   -- Write operation
             IF (WPTR < "1111") THEN
     MEM (CONV_INTEGER(WPTR))<=DATAIN;
     WPTR <=WPTR+1;
             ELSE
     RED <= '1';   -- MEMORY FULL WARNING
             END IF;
ELSE    -- READ operation
IF (RPTR < WPTR) THEN
      RED <= '0';     
      DATAOUT <= MEM (CONV_INTEGER (RPTR));
      RPTR <= RPTR+1;
ELSE
     RED <= '1';   -- EMPTY MEMORY WARNING
     DATAOUT <= "00000000";
END IF;
END IF;
END IF;
END IF;
END IF;
END PROCESS;


end Behavioral;
